{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TitlePrincipalsSF",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DIM_TITLE_SF",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "PersonnelDim",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TCONST as string,",
				"          ORDERING as decimal(38,0),",
				"          NCONST as string,",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          TITLE_SK as decimal(10,0),",
				"          TCONST as string,",
				"          PRIMARY_TITLE as string,",
				"          ORIGINAL_TITLE as string,",
				"          START_YEAR as decimal(38,0),",
				"          END_YEAR as decimal(38,0),",
				"          TITLE_TYPE as string,",
				"          IS_ADULT as boolean,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source2",
				"source(output(",
				"          PERSONNEL_SK as decimal(10,0),",
				"          NCONST as string,",
				"          PRIMARY_NAME as string,",
				"          BIRTH_YEAR as decimal(38,0),",
				"          DEATH_YEAR as decimal(38,0),",
				"          PRIMARY_PROFESSION as string,",
				"          KNOWN_FOR_TITLES as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source3",
				"source1, source2 join(source1@TCONST == source2@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}